@page "/PieChart"
@inject IAdult IAdult;
@using ChartJs.Blazor.PieChart
@using Models
@using Assignment1.Data
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Policy = "Admin")];


<h3> Pie Chart</h3>
<AuthorizeView Policy="Admin">
    <Chart Config="pieConfig"></Chart>
</AuthorizeView>

@code {
    private PieConfig pieConfig;
    private List<Adult> Adults;
    private int semiMedium = 0;
    private int medium = 0;
    private int semiOld = 0;
    private int old = 0;
    private IList<Adult> temp = new List<Adult>();

    protected override async Task OnInitializedAsync()
    {
        Adults = new List<Adult>();
        await ConfigurePieChart();
    }

    private async Task ConfigurePieChart()
    {
        pieConfig = new PieConfig
        {
            Options = new PieOptions()
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Pie Chart"
                }
            }
        };
        temp = await IAdult.GetAdultAsync();
        foreach (var adults in  temp)
        {
           Adults.Add(adults);

            if (adults.Age > 18 && adults.Age < 27)
            {
                semiMedium++;
            }
            else if (adults.Age > 27 && adults.Age < 35)
            {
                medium++;
            }
            else if (adults.Age > 35 && adults.Age < 50)
            {
                semiOld++;
            }
            else
            {
                old++;
            }
        }


        foreach (var age in new[] {"Between 18-27 ", "Between 27-35 ", "Between 35-50 ", "50+ "})
        {
            pieConfig.Data.Labels.Add(age);
        }
        var dataset = new PieDataset<int>(new[] {semiMedium, medium, semiOld, old})
        {
            BackgroundColor = new[]
            {
                ColorUtil.ColorHexString(255, 0, 0),
                ColorUtil.ColorHexString(0, 255, 0),
                ColorUtil.ColorHexString(0, 0, 255),
                ColorUtil.ColorHexString(100, 150, 8),
            }
        };
         pieConfig.Data.Datasets.Add(dataset);
    }

}