@page "/AddAdult"
@using Models
@using Assignment1.Data
@inject NavigationManager NavigationManager
@inject IAdult IAdult;

<EditForm Model="@adult" OnValidSubmit="@AddNewAdult">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <header class="card-header">
                    <h4 class="card-title mt-2">Add adult</h4>
                </header>
                <article class="card-body">

                    <div class="form-row">
                        <div class="col form-group">
                            <label>First Name :</label>
                            <InputText class="form-control" @bind-Value="adult.FirstName"/>
                        </div>
                        <div class="col form-group">
                            <label>Last Name :</label>
                            <InputText class="form-control" @bind-Value="adult.LastName"/>
                        </div><!-- form-group end.// -->
                    </div><!-- form-row end.// -->

                    <div class="form-group">

                        <label>Hair Color :</label>
                        <InputSelect class="form-control" @bind-Value="adult.HairColor">
                            <option id="option" selected="">Black</option>
                            <option id="option">Blond</option>
                            <option id="option">White</option>
                            <option id="option">Brown</option>
                            <option id="option">Leverpostej</option>
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label>Eye Color :</label>
                        <InputSelect class="form-control" @bind-Value="adult.EyeColor">
                            <option id="option">Grey</option>
                            <option id="option">Blue</option>
                            <option id="option">Amber</option>
                            <option id="option" selected="">Brown</option>
                            <option id="option">Green</option>
                            <option id="option">Black</option>

                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label>Age :</label>
                        <InputNumber class="form-control" @bind-Value="adult.Age"/>
                    </div>
                    <div class="form-group">
                        <label>Weight :</label>
                        <InputNumber class="form-control" @bind-Value="adult.Weight"/>
                    </div>
                    <div class="form-group">
                        <label>Height :</label>
                        <InputNumber class="form-control" @bind-Value="adult.Height"/>
                    </div>
                    <div class="form-group">
                        <label>Sex :</label>
                        <InputSelect class="form-control" @bind-Value="adult.Sex">
                            <option id="option">M</option>
                            <option id="option" selected="">F</option>
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label>Job :</label>
                        <InputText class="form-control" @bind-Value="@job"/>
                    </div>
                    <div class="form-group">
                        <label>Salary :</label>
                        <InputNumber class="form-control" @bind-Value="@salary"/>
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary btn-block" type="submit">Add Adult</button>
                    </div>

                </article>

            </div>
        </div>
    </div>

</EditForm>


@code {

    private Adult adult = new Adult();
    private Job newJob = new Job();

    private string job;
    private int salary;


    private async Task AddNewAdult()
    {
        int count = await IAdult.getLastAdultId();

        if (string.IsNullOrEmpty(job))
        {
            job = "Unemployed";
            newJob.JobTitle = job;
            newJob.Salary = salary;
        }
        else
        {
            newJob.JobTitle = job;
            newJob.Salary = salary;
        }
        adult.JobTitle = newJob;


        adult.Id = ++count;
        if (String.IsNullOrEmpty(adult.Sex))
        {
            adult.Sex = "F";
        }
        if (String.IsNullOrEmpty(adult.EyeColor))
        {
            adult.EyeColor = "Brown";
        }
        if (String.IsNullOrEmpty(adult.HairColor))
        {
            adult.HairColor = "Black";
        }


        await IAdult.AddAdultAsync(adult);

        NavigationManager.NavigateTo("ViewAdults");
        ClearFields();
    }

    private void ClearFields()
    {
        job = "";
        salary = 0;
    }

}